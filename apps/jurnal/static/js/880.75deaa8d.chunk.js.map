{"version":3,"file":"static/js/880.75deaa8d.chunk.js","mappings":"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","sources":["webpack://frontend/./src/components/PopapError/style.module.css?2ebf","components/PopapError/PopapError.jsx","services/order.service.js","components/MaxOrder/MaxOrder.jsx","components/MinOrder/MinOrder.jsx","pages/AdminExport/AdminExport.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"user__alert\":\"style_user__alert__Hvfgg\",\"user__error\":\"style_user__error__50+v3\"};","import React from \"react\";\r\nimport st from \"./style.module.css\";\r\n\r\nexport default function PopapError({ text }) {\r\n    return (\r\n        <p className={[st.user__alert, st.user__error].join(\" \")}>\r\n            {\r\n                !text ? \"что-то не так...\" : text\r\n            }\r\n        </p>\r\n    );\r\n}\r\n","import { BASE } from \"./vars.js\";\r\n\r\n/**\r\n * \r\n * @param {Object} body Тело запроса, передаваемое на сервервер\r\n * @param {String} typeOrder Необходимы тип отчёта (min\\...)\r\n * @returns \r\n */\r\nexport let getPeriodReport = async (body, typeOrder) => {\r\n        let res = await fetch(`${BASE}/${typeOrder === \"min\" ? \"min\" : \"\"}order`, {\r\n                method: \"POST\",\r\n                headers: {\r\n                        \"Content-Type\": \"application/json\",\r\n                        Authorization: localStorage.getItem(\"token\") || \"\",\r\n                },\r\n                body: JSON.stringify(body),\r\n        });\r\n\r\n        return !res.ok ? { status: \"error\" } : res.json();\r\n};","import React from 'react';\r\n\r\nexport default function MaxOrder({ orderReq }) {\r\n\r\n        if (Boolean(orderReq.date_start)) {\r\n                return (\r\n                        <>\r\n                                <caption>\r\n                                        Отчёт с {orderReq?.date_start} по {orderReq?.date_end}\r\n                                </caption>\r\n                                <thead>\r\n                                        <tr>\r\n                                                <th rowSpan={3}>ИСП-421</th>\r\n                                                {orderReq?.lessons.map((item) => (\r\n                                                        <th>\r\n                                                                {new Date(\r\n                                                                        item.lesson_date\r\n                                                                ).toLocaleDateString(\"ru\", {\r\n                                                                        day: \"2-digit\",\r\n                                                                        month: \"2-digit\",\r\n                                                                })}\r\n                                                        </th>\r\n                                                ))}\r\n                                                <th rowSpan={3}>Опоздания</th>\r\n                                                <th rowSpan={3}>НУ (по уважительной)</th>\r\n                                                <th rowSpan={3}>Н (по не уважительной)</th>\r\n                                                <th rowSpan={3}>НБ (по болезни)</th>\r\n                                                <th rowSpan={3}>Всего академических часов</th>\r\n                                        </tr>\r\n                                        <tr>\r\n                                                {orderReq?.lessons.map((item) => (\r\n                                                        <th style={{ maxWidth: \"200px\" }}>\r\n                                                                {item.lesson_name}\r\n                                                        </th>\r\n                                                ))}\r\n                                        </tr>\r\n                                        <tr>\r\n                                                {orderReq?.lessons.map((item) => (\r\n                                                        <th>{item.lesson_number}</th>\r\n                                                ))}\r\n                                        </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                        {orderReq?.students.map((item) => (\r\n                                                <tr>\r\n                                                        <td style={{ width: \"300px\" }}>\r\n                                                                {item.student_fullname}\r\n                                                        </td>\r\n                                                        {item.logs.map((item) => (\r\n                                                                <td>{item || \" \"}</td>\r\n                                                        ))}\r\n                                                        <td>{item.total.delays}</td>\r\n                                                        <td>{item.total.respectfully}</td>\r\n                                                        <td>{item.total.disrespectful}</td>\r\n                                                        <td>{item.total.disease}</td>\r\n                                                        <td>\r\n                                                                {item.total.respectfully +\r\n                                                                        item.total.disrespectful +\r\n                                                                        item.total.disease}\r\n                                                        </td>\r\n                                                </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                                <tfoot>\r\n                                        <tr>\r\n                                                <th>Куратор</th>\r\n                                                <td colSpan={4}>Яковец Е. Е.</td>\r\n                                                <td colSpan={3}> </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                                <th>Староста</th>\r\n                                                <td colSpan={4}>Борисов А. О.</td>\r\n                                                <td colSpan={3}> </td>\r\n                                        </tr>\r\n                                </tfoot>\r\n                        </>\r\n                )\r\n        }\r\n        else {\r\n                return (<>FALSE</>)\r\n        }\r\n}\r\n","import React from 'react'\r\n\r\nexport default function MinOrder({ orderReq }) {\r\n        if (Boolean(orderReq.date_start)) {\r\n                return (\r\n                        <>\r\n                                <caption>\r\n                                        Отчёт с {orderReq?.date_start} по {orderReq?.date_end}\r\n                                </caption>\r\n                                <thead>\r\n                                        <tr>\r\n                                                <th rowSpan={1}>ИСП-421</th>\r\n                                                <th rowSpan={1}>Опоздания</th>\r\n                                                <th rowSpan={1}>НУ (по уважительной)</th>\r\n                                                <th rowSpan={1}>Н (по не уважительной)</th>\r\n                                                <th rowSpan={1}>НБ (по болезни)</th>\r\n                                                <th rowSpan={1}>Всего академических часов</th>\r\n                                        </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                        {orderReq?.students.map((item) => (\r\n                                                <tr>\r\n                                                        <td style={{ width: \"300px\" }}>\r\n                                                                {item.student_fullname}\r\n                                                        </td>\r\n                                                        <td>{item.total.delays}</td>\r\n                                                        <td>{item.total.respectfully}</td>\r\n                                                        <td>{item.total.disrespectful}</td>\r\n                                                        <td>{item.total.disease}</td>\r\n                                                        <td>\r\n                                                                {item.total.respectfully +\r\n                                                                        item.total.disrespectful +\r\n                                                                        item.total.disease}\r\n                                                        </td>\r\n                                                </tr>\r\n                                        ))}\r\n                                </tbody>\r\n                                <tfoot>\r\n                                        <tr>\r\n                                                <th>Куратор</th>\r\n                                                <td colSpan={3}>Яковец Е. Е.</td>\r\n                                                <td colSpan={2}> </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                                <th>Староста</th>\r\n                                                <td colSpan={3}>Борисов А. О.</td>\r\n                                                <td colSpan={2}> </td>\r\n                                        </tr>\r\n                                </tfoot>\r\n                        </>\r\n                )\r\n        }\r\n        else {\r\n                return (<>FALSE</>)\r\n        }\r\n}\r\n","import React, { useCallback, useRef, useState } from \"react\";\r\nimport \"./AdminExport.css\";\r\nimport { useMutation } from \"react-query\";\r\nimport { getPeriodReport } from \"../../services/order.service\";\r\nimport MaxOrder from \"../../components/MaxOrder/MaxOrder\";\r\nimport MinOrder from \"../../components/MinOrder/MinOrder\";\r\nimport PopapLoading from \"../../components/PopapLoading/PopapLoading\";\r\nimport PopapError from \"../../components/PopapError/PopapError\";\r\n\r\nexport default function AdminExport() {\r\n    let refTable = useRef(null);\r\n    let [dateStart, setDateStart] = useState(\r\n        new Date().toISOString().split(\"T\")[0]\r\n    );\r\n    let [dateStop, setDateStop] = useState(\r\n        new Date().toISOString().split(\"T\")[0]\r\n    );\r\n\r\n    let getFile = (data) => {\r\n        let link = document.createElement(\"a\");\r\n        link.download = `report_${orderReq.data.date_start}_${orderReq.data.date_end}.xls`;\r\n\r\n        let blob = new Blob(\r\n            [\r\n                `<htmlxmlns:o=\"urn:schemas-microsoft-com:office:office\"xmlns:x=\"urn:schemas-microsoft-com:office:excel\"xmlns=\"http://www.w3.org/TR/REC-html40\"><head><meta charset=\"UTF-8\" /><!--[if gte mso 9]><xml><x:ExcelWorkbook><x:ExcelWorksheets><x:ExcelWorksheet><x:Name>2023-10-02 - 2023-10-08</x:Name><x:WorksheetOptions><x:DisplayGridlines /></x:WorksheetOptions></x:ExcelWorksheet></x:ExcelWorksheets></x:ExcelWorkbook></xml><![endif]--></head><body><table border=\"2\">${data}</table></body></html>`,\r\n            ],\r\n            { type: \"application/vnd.ms-excel\" }\r\n        );\r\n\r\n        link.href = URL.createObjectURL(blob);\r\n\r\n        link.click();\r\n\r\n        URL.revokeObjectURL(link.href);\r\n    };\r\n\r\n    let [type, setType] = useState(\"max\");\r\n    let [data, setData] = useState({});\r\n\r\n    let orderReq = useMutation({\r\n        mutationFn: (bodyReq) => getPeriodReport(bodyReq, type),\r\n        onSuccess: (value) => {\r\n            setData(value)\r\n        }\r\n    });\r\n\r\n    let handlerSubmit = useCallback(\r\n        (e) => {\r\n            e.preventDefault();\r\n            orderReq.mutate({\r\n                start_date: new Date(dateStart).toISOString().split(\"T\")[0],\r\n                end_date: new Date(dateStop).toISOString().split(\"T\")[0],\r\n            });\r\n        },\r\n        [dateStart, dateStop, type]\r\n    );\r\n\r\n    return (\r\n        <div className=\"export\">\r\n\r\n            <form onSubmit={handlerSubmit}>\r\n                <label className=\"export__box\">\r\n                    <span>Начальная дата</span>\r\n                    <input\r\n                        className=\"export__input\"\r\n                        onSubmit={(e) => e.preventDefault()}\r\n                        type=\"date\"\r\n                        name=\"date_start\"\r\n                        id=\"date_start\"\r\n                        defaultValue={new Date().toISOString().split(\"T\")[0]}\r\n                        onChange={(e) => setDateStart(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label className=\"export__box\">\r\n                    <span>Конечная дата</span>\r\n                    <input\r\n                        className=\"export__input\"\r\n                        onSubmit={(e) => e.preventDefault()}\r\n                        type=\"date\"\r\n                        name=\"date_end\"\r\n                        id=\"date_end\"\r\n                        defaultValue={new Date().toISOString().split(\"T\")[0]}\r\n                        onChange={(e) => setDateStop(e.target.value)}\r\n                    />\r\n                </label>\r\n                <label className=\"export__minbox\" htmlFor=\"typeOrderId\">\r\n                    <p>Минимальный отчёт</p>\r\n                    <input\r\n                        className=\"export__check\"\r\n                        onChange={(e) => {\r\n                            setData({})\r\n                            setType(e.target.checked ? \"min\" : \"max\");\r\n                        }}\r\n                        type=\"checkbox\"\r\n                        name=\"typeOrder\"\r\n                        id=\"typeOrderId\"\r\n                    />\r\n                    <div className=\"export__checkbox\"></div>\r\n                </label>\r\n                <button className=\"export_getReq\">\r\n                    <span>Получить данные</span>\r\n                </button>\r\n            </form>\r\n\r\n            {orderReq.isLoading && <PopapLoading />}\r\n            {orderReq.isError && <PopapError />}\r\n\r\n            {Boolean(data.students) ? (\r\n                <>\r\n                    <React.Suspense fallback={<PopapLoading />}>\r\n                        <button\r\n                            className=\"export_getReq\"\r\n                            onClick={() => getFile(refTable.current.innerHTML)}\r\n                        >\r\n                            Скачать XLS\r\n                        </button>\r\n                        <div className=\"export_container\">\r\n                            <table cellSpacing={0} ref={refTable}>\r\n                                {type === \"min\" ? (\r\n                                    <MinOrder orderReq={data} />\r\n                                ) : (\r\n                                    <MaxOrder orderReq={data} />\r\n                                )}\r\n                            </table>\r\n                        </div>\r\n\r\n                    </React.Suspense>\r\n                </>\r\n            ) : (\r\n                <p>Здесь будет ваша таблица...</p>\r\n            )}\r\n        </div>\r\n    );\r\n}\r\n"],"names":["PopapError","_ref","text","_jsx","className","st","user__alert","user__error","join","children","getPeriodReport","async","body","typeOrder","res","fetch","concat","BASE","method","headers","Authorization","localStorage","getItem","JSON","stringify","ok","json","status","MaxOrder","orderReq","Boolean","date_start","_jsxs","_Fragment","date_end","rowSpan","lessons","map","item","Date","lesson_date","toLocaleDateString","day","month","style","maxWidth","lesson_name","lesson_number","students","width","student_fullname","logs","total","delays","respectfully","disrespectful","disease","colSpan","MinOrder","AdminExport","refTable","useRef","dateStart","setDateStart","useState","toISOString","split","dateStop","setDateStop","type","setType","data","setData","useMutation","mutationFn","bodyReq","onSuccess","value","handlerSubmit","useCallback","e","preventDefault","mutate","start_date","end_date","onSubmit","name","id","defaultValue","onChange","target","htmlFor","checked","isLoading","PopapLoading","isError","React","fallback","onClick","link","document","createElement","download","blob","Blob","href","URL","createObjectURL","click","revokeObjectURL","getFile","current","innerHTML","cellSpacing","ref"],"sourceRoot":""}